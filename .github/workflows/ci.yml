name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  tests:
    name: Run Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Docker Compose Installation
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Launch services with Docker Compose
        run: |
          cd docker
          docker compose up -d database
          sleep 5

      - name: Check the connection to PostgreSQL
        run: |
          until docker exec $(docker ps -qf "name=database") pg_isready -U user -d tournament_db; do
            echo "⏳ Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Start Backend
        run: docker compose up --build -d backend
        working-directory: docker

      - name: Set DATABASE_URL for GitHub Actions
        run: echo "DATABASE_URL=postgresql://user:password@localhost:5432/tournament_db" >> $GITHUB_ENV

      - name: Synchronize Prisma with the base
        run: docker exec $(docker ps -qf "name=backend") npx prisma db push

      - name: Run backend tests
        run: docker exec $(docker ps -qf "name=backend") npm run test

      - name: Stop containers after testing
        run: docker compose down
        working-directory: docker

  build-and-push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Code Checkout
        uses: actions/checkout@v3

      - name: Connect to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker (only on main)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tournament-backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/tournament-backend:latest
          docker build -t ${{ secrets.DOCKER_USERNAME }}/tournament-frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/tournament-frontend:latest

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull mydockerhubusername/my-backend:latest
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend -p 5000:5000 mydockerhubusername/my-backend:latest
